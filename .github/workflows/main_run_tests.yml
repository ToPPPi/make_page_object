name: Run Tests

on:
  workflow_dispatch:  # Ручной запуск
    inputs:
      browser:
        description: "Выберите браузер (chrome, firefox или all)"
        required: true
        default: "all"
        type: choice
        options:
          - chrome
          - firefox
          - all
  push:
    branches:
      - main  # Запускать тесты только при пуше в ветку main
  pull_request:
    branches:
      - main  # Запускать тесты при создании пул-реквеста в ветку main

jobs:
  test:
    runs-on: ubuntu-latest  # Используем последнюю версию Ubuntu

    services:
      selenium-hub:
        image: selenium/hub  # Официальный образ Selenium Hub
        ports:
          - 4444:4444  # Пробрасываем порт 4444

      chrome:
        image: selenium/node-chrome  # Узел для Chrome
        env:
          SE_EVENT_BUS_HOST: selenium-hub
          SE_EVENT_BUS_PUBLISH_PORT: 4442
          SE_EVENT_BUS_SUBSCRIBE_PORT: 4443
        ports:
          - 5900:5900  # Пробрасываем порт для VNC (опционально)

      firefox:
        image: selenium/node-firefox  # Узел для Firefox
        env:
          SE_EVENT_BUS_HOST: selenium-hub
          SE_EVENT_BUS_PUBLISH_PORT: 4442
          SE_EVENT_BUS_SUBSCRIBE_PORT: 4443
        ports:
          - 5901:5900  # Пробрасываем порт для VNC (опционально)

    steps:
      # Шаг 1: Клонируем репозиторий
      - name: Checkout code
        uses: actions/checkout@v3

      # Шаг 2: Устанавливаем Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"  # Указываем версию Python

      # Шаг 3: Устанавливаем зависимости
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Шаг 4: Устанавливаем Allure CLI
      - name: Install Allure CLI
        run: |
          sudo apt-get update
          sudo apt-get install default-jre -y
          wget https://github.com/allure-framework/allure2/releases/download/2.24.0/allure-2.24.0.tgz
          tar -xzf allure-2.24.0.tgz
          sudo mv allure-2.24.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure
          allure --version  # Проверяем установку

      # Шаг 5: Определяем браузер для тестов
      - name: Determine browser
        id: browser
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "Выбран браузер: ${{ github.event.inputs.browser }}"
            echo "browser=${{ github.event.inputs.browser }}" >> $GITHUB_ENV
          else
            echo "Запуск по умолчанию: все браузеры"
            echo "browser=all" >> $GITHUB_ENV
          fi

      # Шаг 6: Запускаем тесты
      - name: Run tests
        continue-on-error: true  # Продолжать выполнение, даже если тесты упали
        run: |
          if [ "$browser" == "all" ]; then
            pytest tests/ --alluredir=allure-results --maxfail=10
          else
            pytest tests/ --browser=$browser --alluredir=allure-results --maxfail=10
          fi

      # Шаг 7: Генерируем Allure-отчет (если есть результаты)
      - name: Generate Allure report
        run: |
          if [ -d "allure-results" ]; then
            allure generate allure-results -o allure-report --clean
          else
            echo "No test results found. Skipping Allure report generation."
          fi

      # Шаг 8: Загружаем Allure-отчет как артефакт
      - name: Upload Allure report
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: allure-report

      # Шаг 9: Загружаем результаты Allure-results как артефакт (для отладки)
      - name: Upload Allure results
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure-results

      # Шаг 10: Публикуем отчет на GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: allure-report
          keep_files: true  # Сохранять существующие файлы в ветке gh-pages